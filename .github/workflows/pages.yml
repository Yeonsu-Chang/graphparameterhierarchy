name: Deploy Vite to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  # 프로젝트가 레포 루트가 아니라면 ./app 같은 경로로 바꿔주세요.
  WORKDIR: .         # ← 필요 시 './GraphHierarchy' 처럼 변경

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # 패키지 매니저 자동 감지
      - name: Detect package manager
        id: pm
        working-directory: ${{ env.WORKDIR }}
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "pm=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "pm=yarn" >> $GITHUB_OUTPUT
          else
            echo "pm=npm" >> $GITHUB_OUTPUT
          fi

      # 의존성 설치
      - name: Install deps
        working-directory: ${{ env.WORKDIR }}
        run: |
          if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ]; then
            corepack enable
            pnpm i --frozen-lockfile || pnpm i
          elif [ "${{ steps.pm.outputs.pm }}" = "yarn" ]; then
            corepack enable
            yarn install --frozen-lockfile || yarn install
          else
            if [ -f package-lock.json ]; then npm ci; else npm install; fi
          fi

      # 빌드
      - name: Build
        working-directory: ${{ env.WORKDIR }}
        run: |
          if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ]; then pnpm build;
          elif [ "${{ steps.pm.outputs.pm }}" = "yarn" ]; then yarn build;
          else npm run build; fi

      # SPA 새로고침 404 방지
      - name: Copy 404 for SPA
        working-directory: ${{ env.WORKDIR }}
        run: |
          mkdir -p dist
          cp dist/index.html dist/404.html || true
          ls -la dist

      # Pages 아티팩트 업로드
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.WORKDIR }}/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment
